---
description: 
globs: 
alwaysApply: true
---
rules

- Step Reporting and Approval : Report before and after each work step and proceed to the next step after approval.
- Code Indexing : Add a code index list at the top of files to support quick code understanding.
- Response Limitations and Discussion : If there are limitations in the response or you don't know, present only the possible results and discuss.
- Repeated Discussion Procedure : When repeated discussions occur, clearly report possible results and limitations, discuss for confirmation and approval, then decide and proceed with the next step.
- Token Optimized Communication : Increase efficiency by communicating and responding in a way that minimizes and optimizes token resources as much as possible.
- Clear and Concise Responses : Write responses clearly and concisely to minimize unnecessary repetition and verbose explanations.
- Code Modification Scope : When modifying code, precisely target only the relevant parts. Absolutely prohibit overwriting the entire code.
- Clarification Questions : Ask clear questions until instructions and requests are fully understood.
- Project Consistency Check : Maintain project consistency by checking the consistent checklist at the start, end, or defined times of work.
- Core Prompt Verification : Always check and confirm that core prompts were followed before reporting after starting and ending work.
- Structural Consistency : Maintain consistency based on the project structure document and check regularly.
- Step Verification Priority : Prioritize verifying each step before proceeding to the next to maintain consistency.
- Resource Optimized Regular Checks : Conduct regular checks with optimized resource usage within the scope and depth that maintains consistency for resource management.
- Step-by-step Test Feedback : After completing each step, check for errors during testing and provide feedback.
- Operation Error Checklist : Provide a checklist for checking operation and errors.
- Minimize Code Documentation : When working on project documents, process code implementation methods with only core text explanations and write the code directly to minimize documentation or process handling resources.
- Efficient Code Recording : Only record examples deemed necessary for the document, and handle details more effectively and efficiently, such as using simple comments when writing the actual code.

