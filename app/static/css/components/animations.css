/**
 * Animation & Interaction System
 * 표준 애니메이션 및 인터랙션 컴포넌트
 * 
 * 목차:
 * 1. 기본 트랜지션 클래스
 * 2. 호버 효과
 * 3. 상태 애니메이션
 * 4. 로딩 애니메이션
 * 5. 페이드 효과
 * 6. 슬라이드 효과
 * 7. 접근성 고려사항
 */

/* =============================================================================
   1. 기본 트랜지션 클래스
   ============================================================================= */

/* 표준 트랜지션 클래스 */
.transition-none {
    transition: none;
}

.transition-fast {
    transition: all var(--transition-fast);
}

.transition-base {
    transition: all var(--transition-base);
}

.transition-slow {
    transition: all var(--transition-slow);
}

/* 특정 속성별 트랜지션 */
.transition-colors {
    transition: color var(--transition-base), 
                background-color var(--transition-base), 
                border-color var(--transition-base);
}

.transition-opacity {
    transition: opacity var(--transition-base);
}

.transition-transform {
    transition: transform var(--transition-base);
}

.transition-shadow {
    transition: box-shadow var(--transition-base);
}

/* =============================================================================
   2. 호버 효과
   ============================================================================= */

/* 기본 호버 효과 */
.hover-lift {
    transition: var(--transition-base);
}

.hover-lift:hover {
    border-color: var(--theme-border-active);
    background-color: var(--theme-bg-hover);
}

.hover-lift-sm:hover {
    border-color: var(--theme-border-light);
    background-color: rgba(var(--color-primary-rgb), 0.02);
}

.hover-lift-lg:hover {
    border-color: var(--color-primary);
    background-color: rgba(var(--color-primary-rgb), 0.05);
}

/* 스케일 호버 효과 */
.hover-scale {
    transition: var(--transition-base);
}

.hover-scale:hover {
    transform: scale(1.05);
}

.hover-scale-sm:hover {
    transform: scale(1.02);
}

/* 그림자 호버 효과 */
.hover-shadow {
    transition: var(--transition-base);
}

.hover-shadow:hover {
    box-shadow: var(--shadow-lg);
}

.hover-shadow-xl:hover {
    box-shadow: var(--shadow-xl);
}

/* 색상 호버 효과 */
.hover-primary:hover {
    color: var(--color-primary);
}

.hover-bg-primary:hover {
    background-color: var(--color-primary);
    color: var(--theme-text-on-primary);
}

.hover-bg-secondary:hover {
    background-color: var(--theme-bg-secondary);
}

/* 투명도 호버 효과 */
.hover-opacity {
    transition: var(--transition-base);
}

.hover-opacity:hover {
    opacity: 0.8;
}

.hover-opacity-75:hover {
    opacity: 0.75;
}

/* =============================================================================
   3. 상태 애니메이션
   ============================================================================= */

/* 펄스 애니메이션 */
@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.7;
    }
}

.animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* 스핀 애니메이션 */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.animate-spin {
    animation: spin 1s linear infinite;
}

.animate-spin-slow {
    animation: spin 3s linear infinite;
}

/* 바운스 애니메이션 */
@keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        transform: translate3d(0, 0, 0);
    }
    40%, 43% {
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        transform: translate3d(0, -8px, 0);
    }
    70% {
        animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        transform: translate3d(0, -4px, 0);
    }
    90% {
        transform: translate3d(0, -2px, 0);
    }
}

.animate-bounce {
    animation: bounce 1s infinite;
}

/* 흔들기 애니메이션 */
@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-2px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(2px);
    }
}

.animate-shake {
    animation: shake 0.5s ease-in-out;
}

/* =============================================================================
   4. 로딩 애니메이션
   ============================================================================= */

/* 스피너 */
.spinner {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 2px solid var(--color-gray-200);
    border-radius: 50%;
    border-top-color: var(--color-primary);
    animation: spin 1s ease-in-out infinite;
}

.spinner-sm {
    width: 16px;
    height: 16px;
    border-width: 1.5px;
}

.spinner-lg {
    width: 32px;
    height: 32px;
    border-width: 3px;
}

/* 도트 로딩 */
@keyframes dot-bounce {
    0%, 80%, 100% {
        transform: scale(0);
    }
    40% {
        transform: scale(1);
    }
}

.loading-dots {
    display: inline-block;
}

.loading-dots .dot {
    display: inline-block;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: var(--color-primary);
    margin: 0 2px;
    animation: dot-bounce 1.4s ease-in-out infinite both;
}

.loading-dots .dot:nth-child(1) {
    animation-delay: -0.32s;
}

.loading-dots .dot:nth-child(2) {
    animation-delay: -0.16s;
}

/* 프로그레스 바 애니메이션 */
@keyframes progress-indeterminate {
    0% {
        left: -35%;
        right: 100%;
    }
    60% {
        left: 100%;
        right: -90%;
    }
    100% {
        left: 100%;
        right: -90%;
    }
}

.progress-indeterminate {
    position: relative;
    overflow: hidden;
}

.progress-indeterminate::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    background-color: var(--color-primary);
    animation: progress-indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
}

/* =============================================================================
   5. 페이드 효과
   ============================================================================= */

/* 페이드 인 */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.fade-in {
    animation: fadeIn var(--transition-base) ease-in;
}

.fade-in-slow {
    animation: fadeIn var(--transition-slow) ease-in;
}

/* 페이드 아웃 */
@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

.fade-out {
    animation: fadeOut var(--transition-base) ease-out;
}

/* 페이드 업 */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.fade-in-up {
    animation: fadeInUp var(--transition-base) ease-out;
}

/* 페이드 다운 */
@keyframes fadeInDown {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.fade-in-down {
    animation: fadeInDown var(--transition-base) ease-out;
}

/* =============================================================================
   6. 슬라이드 효과
   ============================================================================= */

/* 슬라이드 인 */
@keyframes slideInDown {
    from {
        transform: translateY(-100%);
    }
    to {
        transform: translateY(0);
    }
}

.slide-in-down {
    animation: slideInDown var(--transition-base) ease-out;
}

@keyframes slideInUp {
    from {
        transform: translateY(100%);
    }
    to {
        transform: translateY(0);
    }
}

.slide-in-up {
    animation: slideInUp var(--transition-base) ease-out;
}

@keyframes slideInLeft {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0);
    }
}

.slide-in-left {
    animation: slideInLeft var(--transition-base) ease-out;
}

@keyframes slideInRight {
    from {
        transform: translateX(100%);
    }
    to {
        transform: translateX(0);
    }
}

.slide-in-right {
    animation: slideInRight var(--transition-base) ease-out;
}

/* 스케일 효과 */
@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

.scale-in {
    animation: scaleIn var(--transition-base) ease-out;
}

/* =============================================================================
   7. 접근성 고려사항
   ============================================================================= */

/* 모바일에서 애니메이션 감소 */
@media (max-width: 768px) {
    .hover-lift:hover,
    .hover-lift-sm:hover,
    .hover-lift-lg:hover {
        transform: none;
    }
    
    .hover-scale:hover,
    .hover-scale-sm:hover {
        transform: none;
    }
    
    /* 애니메이션 지속 시간 단축 */
    .transition-base {
        transition-duration: 150ms;
    }
    
    .transition-slow {
        transition-duration: 200ms;
    }
}

/* 접근성: 애니메이션 선호도 설정 */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
    
    .animate-pulse,
    .animate-bounce,
    .animate-spin,
    .animate-shake {
        animation: none !important;
    }
    
    .hover-lift:hover,
    .hover-scale:hover {
        transform: none !important;
    }
}

/* =============================================================================
   8. 유틸리티 클래스
   ============================================================================= */

/* 애니메이션 지연 */
.delay-75 {
    animation-delay: 75ms;
}

.delay-100 {
    animation-delay: 100ms;
}

.delay-150 {
    animation-delay: 150ms;
}

.delay-200 {
    animation-delay: 200ms;
}

.delay-300 {
    animation-delay: 300ms;
}

.delay-500 {
    animation-delay: 500ms;
}

/* 애니메이션 지속 시간 */
.duration-150 {
    animation-duration: 150ms;
}

.duration-200 {
    animation-duration: 200ms;
}

.duration-300 {
    animation-duration: 300ms;
}

.duration-500 {
    animation-duration: 500ms;
}

.duration-700 {
    animation-duration: 700ms;
}

.duration-1000 {
    animation-duration: 1000ms;
}

/* 애니메이션 반복 */
.repeat-1 {
    animation-iteration-count: 1;
}

.repeat-2 {
    animation-iteration-count: 2;
}

.repeat-infinite {
    animation-iteration-count: infinite;
} 